<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.Dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.Entity.User" >
    <id column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="motto" property="motto" jdbcType="VARCHAR" />
    <result column="used" property="used" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="readlock" property="readlock" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="vatar" property="vatar" jdbcType="VARCHAR" />
    <result column="github" property="github" jdbcType="VARCHAR" />
    <result column="skills" property="skills" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userid, username, password, gender, address, motto, used, total, readlock, email, 
    vatar, github, skills
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.Entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.Entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Entity.User" >
    insert into user (userid, username, password, 
      gender, address, motto, 
      used, total, readlock, 
      email, vatar, github, 
      skills)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{motto,jdbcType=VARCHAR}, 
      #{used,jdbcType=INTEGER}, #{total,jdbcType=INTEGER}, #{readlock,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{vatar,jdbcType=VARCHAR}, #{github,jdbcType=VARCHAR}, 
      #{skills,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="motto != null" >
        motto,
      </if>
      <if test="used != null" >
        used,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="readlock != null" >
        readlock,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="vatar != null" >
        vatar,
      </if>
      <if test="github != null" >
        github,
      </if>
      <if test="skills != null" >
        skills,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="motto != null" >
        #{motto,jdbcType=VARCHAR},
      </if>
      <if test="used != null" >
        #{used,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="readlock != null" >
        #{readlock,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="vatar != null" >
        #{vatar,jdbcType=VARCHAR},
      </if>
      <if test="github != null" >
        #{github,jdbcType=VARCHAR},
      </if>
      <if test="skills != null" >
        #{skills,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.motto != null" >
        motto = #{record.motto,jdbcType=VARCHAR},
      </if>
      <if test="record.used != null" >
        used = #{record.used,jdbcType=INTEGER},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.readlock != null" >
        readlock = #{record.readlock,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.vatar != null" >
        vatar = #{record.vatar,jdbcType=VARCHAR},
      </if>
      <if test="record.github != null" >
        github = #{record.github,jdbcType=VARCHAR},
      </if>
      <if test="record.skills != null" >
        skills = #{record.skills,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set userid = #{record.userid,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      motto = #{record.motto,jdbcType=VARCHAR},
      used = #{record.used,jdbcType=INTEGER},
      total = #{record.total,jdbcType=INTEGER},
      readlock = #{record.readlock,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      vatar = #{record.vatar,jdbcType=VARCHAR},
      github = #{record.github,jdbcType=VARCHAR},
      skills = #{record.skills,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="motto != null" >
        motto = #{motto,jdbcType=VARCHAR},
      </if>
      <if test="used != null" >
        used = #{used,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="readlock != null" >
        readlock = #{readlock,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="vatar != null" >
        vatar = #{vatar,jdbcType=VARCHAR},
      </if>
      <if test="github != null" >
        github = #{github,jdbcType=VARCHAR},
      </if>
      <if test="skills != null" >
        skills = #{skills,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      motto = #{motto,jdbcType=VARCHAR},
      used = #{used,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      readlock = #{readlock,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      vatar = #{vatar,jdbcType=VARCHAR},
      github = #{github,jdbcType=VARCHAR},
      skills = #{skills,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>