<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.Dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.Entity.Message" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="friendid" property="friendid" jdbcType="VARCHAR" />
    <result column="sender" property="sender" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="VARCHAR" />
    <result column="read_time" property="readTime" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.Entity.Message" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, friendid, sender, receiver, type, send_time, read_time, status
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.Entity.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from msg
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.Entity.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from msg
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Entity.MessageExample" >
    delete from msg
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Entity.Message" >
    insert into msg (id, userid, friendid, 
      sender, receiver, type, 
      send_time, read_time, status, 
      content)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{friendid,jdbcType=VARCHAR}, 
      #{sender,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{sendTime,jdbcType=VARCHAR}, #{readTime,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Entity.Message" >
    insert into msg
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="friendid != null" >
        friendid,
      </if>
      <if test="sender != null" >
        sender,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="readTime != null" >
        read_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="friendid != null" >
        #{friendid,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        #{readTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Entity.MessageExample" resultType="java.lang.Integer" >
    select count(*) from msg
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update msg
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.friendid != null" >
        friendid = #{record.friendid,jdbcType=VARCHAR},
      </if>
      <if test="record.sender != null" >
        sender = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null" >
        send_time = #{record.sendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.readTime != null" >
        read_time = #{record.readTime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update msg
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=VARCHAR},
      friendid = #{record.friendid,jdbcType=VARCHAR},
      sender = #{record.sender,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      send_time = #{record.sendTime,jdbcType=VARCHAR},
      read_time = #{record.readTime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update msg
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=VARCHAR},
      friendid = #{record.friendid,jdbcType=VARCHAR},
      sender = #{record.sender,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      send_time = #{record.sendTime,jdbcType=VARCHAR},
      read_time = #{record.readTime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Entity.Message" >
    update msg
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="friendid != null" >
        friendid = #{friendid,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        read_time = #{readTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.Entity.Message" >
    update msg
    set userid = #{userid,jdbcType=VARCHAR},
      friendid = #{friendid,jdbcType=VARCHAR},
      sender = #{sender,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=VARCHAR},
      read_time = #{readTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Entity.Message" >
    update msg
    set userid = #{userid,jdbcType=VARCHAR},
      friendid = #{friendid,jdbcType=VARCHAR},
      sender = #{sender,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=VARCHAR},
      read_time = #{readTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>